---

- name: DNSMasq | package
  tags:
  - package
  package:
    name:
    - dnsmasq
    - dnsmasq-utils

- name: DNSMasq | config subdirs
  tags:
  - dir
  file:
    path: "{{ item.dir }}"
    state: directory
    group: "{{ item.group | default(omit) }}"
    mode:  "{{ item.mode  | default(omit) }}"
  loop:
  - dir: "{{ dnsmasq_conf_dir }}/hosts"
    group: "{{ dnsmasq_group }}"
    mode: "0750"
  - dir: "{{ dnsmasq_iptables_conf | dirname }}"

# Requires a restart
- name: DNSmasq | config
  tags:
  - config
  template:
    src : "{{ item.src }}.j2"
    dest: "{{ item.dest }}/{{ item.src }}"
    group: "{{ item.group | d(omit) }}"
    mode:  "{{ item.mode  | d(omit) }}"
  loop:
  - src: dnsmasq.conf
    dest: /etc
    group: "{{ dnsmasq_group }}"
    mode: 0640
  - src: dnsmasq
    dest: /etc/default
    group: "{{ dnsmasq_group }}"
    mode: 0640
  - src: iptables.conf
    dest: "{{ dnsmasq_iptables_conf | dirname }}"
  notify:
  - daemon-reload
  - restart dnsmasq

# Only requires a reload (HUP)
- name: DNSmasq | auxiliary config
  tags:
  - config
  template:
    src : "{{ item.src }}.j2"
    dest: "{{ dnsmasq_conf_dir }}/{{ item.dest | d() }}/{{ item.src }}"
    group: "{{ dnsmasq_group }}"
    mode: "0640"
  loop:
  - { src: servers }
  - { src: dhcp-hosts }
  - { src: dhcp-opts }
  - { src: hosts, dest: "hosts" }
  notify: reload dnsmasq

# Requires neither restart nor reload
- name: DNSmasq | host lists from URL
  tags:
  - config
  get_url:
    url : "{{ item.value }}"
    dest: "{{ dnsmasq_conf_dir }}/hosts/{{ item.key }}"
    group: "{{ dnsmasq_group }}"
    mode: "0640"
  loop: "{{ q('dict', dnsmasq_host_urls) }}"

- name: DNSMasq | service
  tags:
  - service
  service:
    name: dnsmasq
    state: started
    enabled: yes
